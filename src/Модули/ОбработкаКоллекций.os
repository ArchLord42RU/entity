#Использовать "../internal"

// <Описание функции>
//
// Параметры:
//   ИсходнаяКоллекция - Структура, Массив - Коллекция, которую нужно преобразовать к коллекции сущностей.
//   РодительскаяСущность - Произвольный - Владелец коллекции
//
//  Возвращаемое значение:
//   Массив - Массив сущностей, полученных из элементов изначальной коллекции.
//
Функция ПреобразоватьКоллекциюККоллекцииСущностей(
	ИсходнаяКоллекция, 
	РодительскаяСущность,
	РодительскийОбъектМодели,
	ДанныеОКолонке) Экспорт
	
	КоллекцияСущностей = Новый Массив;
	ТипКоллекции = ТипЗнч(ИсходнаяКоллекция);
	
	ОбъектМоделиЭлементКоллекции = ОбработкаКоллекций.ПолучитьОбъектМоделиДляКоллекции(
		РодительскийОбъектМодели,
		ДанныеОКолонке
	);

	Если ТипКоллекции = Тип("Массив") Тогда
		
		Для сч = 0 По ИсходнаяКоллекция.ВГраница() Цикл
			Значение = ИсходнаяКоллекция[сч];
			
			СущностьЭлемент = Новый СлужебнаяСущность_ЭлементКоллекцииКлючЗначение();
			
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "ref", РодительскаяСущность);
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "key", сч);
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "value", Значение);
			
			КоллекцияСущностей.Добавить(СущностьЭлемент);
		КонецЦикла;
		
	ИначеЕсли ТипКоллекции = Тип("Структура") Тогда
		
		Для Каждого ЭлементКоллекции Из ИсходнаяКоллекция Цикл
			СущностьЭлемент = Новый СлужебнаяСущность_ЭлементКоллекцииКлючЗначение();
			
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "ref", РодительскаяСущность);
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "key", ЭлементКоллекции.Ключ);
			ОбъектМоделиЭлементКоллекции.УстановитьЗначениеКолонкиВПоле(СущностьЭлемент, "value", ЭлементКоллекции.Значение);
			
			КоллекцияСущностей.Добавить(СущностьЭлемент);
		КонецЦикла;
		
	Иначе
		ВызватьИсключение "Неизвестный тип коллекции " + ТипКоллекции;
	КонецЕсли;
	
	Возврат КоллекцияСущностей;
	
КонецФункции

Функция ПреобразоватьКоллекциюСтрокККоллекции(КоллекцияСущностей, ДанныеОКолонке) Экспорт
	
	Если ДанныеОКолонке.ТипКолонки = ТипыКолонок.Массив Тогда
		Коллекция = Новый Массив;
		
		Для Каждого СущностьЭлемент Из КоллекцияСущностей Цикл
			Коллекция.Добавить(СущностьЭлемент.Получить("value"));
		КонецЦикла;
	ИначеЕсли ДанныеОКолонке.ТипКолонки = ТипыКолонок.Структура Тогда
		Коллекция = Новый Структура;
		
		Для Каждого СущностьЭлемент Из КоллекцияСущностей Цикл
			Коллекция.Вставить(СущностьЭлемент.Получить("key"), СущностьЭлемент.Получить("value"));
		КонецЦикла;
	Иначе
		ВызватьИсключение "Неизвестный тип коллекции " + ДанныеОКолонке.ТипКоллекции;
	КонецЕсли;
	
	Возврат Коллекция;
	
КонецФункции

Функция ПолучитьОбъектМоделиДляКоллекции(РодительскийОбъектМодели, ДанныеОКолонке) Экспорт
	
	ИмяТаблицы = РодительскийОбъектМодели.ИмяТаблицы() + "_" + ДанныеОКолонке.ИмяКолонки;
	
	Если ДанныеОКолонке.ТипКолонки = ТипыКолонок.Массив Тогда
		ТипКолонкиКлюч = ТипыКолонок.Целое;
	ИначеЕсли ДанныеОКолонке.ТипКолонки = ТипыКолонок.Структура Тогда
		ТипКолонкиКлюч = ТипыКолонок.Строка;
	Иначе
		ВызватьИсключение "Неизвестный тип элемента " + ДанныеОКолонке.ТипЭлемента;
	КонецЕсли;
	
	ОбъектМоделиЭлементКоллекции = Новый ОбъектМодели(
		Тип("СлужебнаяСущность_ЭлементКоллекцииКлючЗначение"),
		РодительскийОбъектМодели.МодельДанных()
	);

	ОбъектМоделиЭлементКоллекции.Служебный_ИмяТаблицы(ИмяТаблицы);
	КолонкиОбъектаМодели = ОбъектМоделиЭлементКоллекции.Служебный_Колонки();
	
	КолонкаKey = КолонкиОбъектаМодели.Найти("key", "ИмяКолонки");
	КолонкаKey.ТипКолонки = ТипКолонкиКлюч;
	
	КолонкаRef = КолонкиОбъектаМодели.Найти("ref", "ИмяКолонки");
	КолонкаRef.ТипЭлемента = РодительскийОбъектМодели.ТипСущности();
	
	КолонкаValue = КолонкиОбъектаМодели.Найти("value", "ИмяКолонки");
	Если ТипыКолонок.ЭтоПримитивныйТип(ДанныеОКолонке.ТипЭлемента) Тогда
		КолонкаValue.ТипКолонки = ДанныеОКолонке.ТипЭлемента;
	ИначеЕсли ТипыКолонок.ЭтоКоллекция(ДанныеОКолонке.ТипЭлемента) Тогда
		ВызватьИсключение "Коллекция коллекций не поддерживается.";
	Иначе
		ОбъектМоделиТипЭлемента = РодительскийОбъектМодели.МодельДанных().Получить(ДанныеОКолонке.ТипЭлемента);
		КолонкаValue.ТипКолонки = ТипыКолонок.Ссылка;
		КолонкаValue.ТипЭлемента = ДанныеОКолонке.ТипЭлемента;
	КонецЕсли;
	
	Возврат ОбъектМоделиЭлементКоллекции;
	
КонецФункции