#Использовать ".."

Перем МенеджерСущностей;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("МенеджерСущностейSQLiteРеализуетИнтерфейсМенеджераСущностей");
	ИменаТестов.Добавить("МетодНачатьТранзакциюРаботаетБезОшибок");
	ИменаТестов.Добавить("МетодЗафиксироватьТранзакциюРаботаетБезОшибок");
	ИменаТестов.Добавить("СозданиеТаблицыПоКлассуМодели");
	ИменаТестов.Добавить("СохранениеСущности");

	Возврат ИменаТестов;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	МенеджерСущностей = ФабрикаМенеджераСущностей.ПолучитьМенеджерСущностей(Тип("МенеджерСущностейSQLite"));
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	МенеджерСущностей.Закрыть();
	МенеджерСущностей = Неопределено;
КонецПроцедуры

Процедура МенеджерСущностейSQLiteРеализуетИнтерфейсМенеджераСущностей() Экспорт
	МенеджерСущностей = ФабрикаМенеджераСущностей.ПолучитьМенеджерСущностей(Тип("МенеджерСущностейSQLite"));
КонецПроцедуры

Процедура МетодНачатьТранзакциюРаботаетБезОшибок() Экспорт
	МенеджерСущностей.НачатьТранзакцию();
КонецПроцедуры

Процедура МетодЗафиксироватьТранзакциюРаботаетБезОшибок() Экспорт
	МенеджерСущностей.НачатьТранзакцию();
	МенеджерСущностей.ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура СозданиеТаблицыПоКлассуМодели() Экспорт
	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "tests", "fixtures", "Автор.os"), "Автор");
	МенеджерСущностей.ИнициализироватьТаблицу(Новый Автор);
КонецПроцедуры

Процедура СохранениеСущности() Экспорт
	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "tests", "fixtures", "Автор.os"), "Автор");
	МенеджерСущностей.ИнициализироватьТаблицу(Новый Автор);
	
	Результат = МенеджерСущностей.ВыполнитьЗапрос("SELECT * FROM Автор");
	Ожидаем.Что(Результат, "В таблице не должно быть записей").ИмеетДлину(0);
	
	СохраняемыйАвтор = Новый Автор;
	МенеджерСущностей.Сохранить(СохраняемыйАвтор);
	
	Результат = МенеджерСущностей.ВыполнитьЗапрос("SELECT * FROM Автор");
	Ожидаем.Что(Результат, "В таблице должен был сохраниться новый автор").ИмеетДлину(1);

КонецПроцедуры
